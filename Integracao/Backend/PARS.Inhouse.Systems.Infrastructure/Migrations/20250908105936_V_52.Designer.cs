// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PARS.Inhouse.Systems.Infrastructure.Data.DbContext.SQLSERVE;

#nullable disable

namespace PARS.Inhouse.Systems.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250908105936_V_52")]
    partial class V_52
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IntegracaoSppBimerInvoce", b =>
                {
                    b.Property<int>("CdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NumeroDaNFSe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CDCentroDeCusto")
                        .HasColumnType("int");

                    b.Property<int?>("CDOperacoes")
                        .HasColumnType("int");

                    b.Property<int?>("CdCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoDaOperacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoDoCentroDeCusto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estoque")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("FabricanteId")
                        .HasColumnType("int");

                    b.Property<string>("NomeDoFabricante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObsNotaFiscal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusIntegracaoAlterData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusIntegracaoAlterDataObs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CdEmpresa", "NumeroDocumento", "NumeroDaNFSe");

                    b.ToTable("IntegracaoSppBimerInvoce");
                });

            modelBuilder.Entity("IntegracaoSppBimerInvoceItens", b =>
                {
                    b.Property<int>("CdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NumeroDaNFSe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CdProduto")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomeDoProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecoCompraReal")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("PrecoCompraUS")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("PrecoUnitItem")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("PrecoVendaReal")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("PrecoVendaUS")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Qtd")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("CdEmpresa", "NumeroDocumento", "NumeroDaNFSe", "CdProduto");

                    b.ToTable("IntegracaoSppBimerInvoceItens");
                });

            modelBuilder.Entity("IntegracaoSppBimerInvoceResumo", b =>
                {
                    b.Property<int>("CdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NumeroDaNFSe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataDeVencimento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorPagamentoTotal")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("CdEmpresa", "NumeroDocumento", "NumeroDaNFSe");

                    b.ToTable("IntegracaoSppBimerInvoceResumo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.AutorizacaoEndpoints.AnyPointUserEndpointPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnyPointUserEndpointPermission");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.GestaoIntegracao.AnyPointStoreGestaoIntegracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DataCriacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEdicao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjetoDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjetoOrigem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnyPointStoreGestaoIntegracao");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.GestaoMapeamentosDepara.AnyPointDeparas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CampoDestino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampoOrigem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoSistemaDestino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoSistemaOrigem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCampos")
                        .HasColumnType("int");

                    b.Property<string>("Integracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMapeamentoDestino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMapeamentoOrigem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoExecucao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorDestino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorOrigem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnyPointDeparas");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.GestaoMapeamentosDepara.AnyPointStoreMapeamentoIntegracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("DataCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEdicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntegracaoId")
                        .HasColumnType("int");

                    b.Property<int>("MapeamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnyPointStoreMapeamentoIntegracao");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DataCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEdicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EhMenuPrincipal")
                        .HasColumnType("bit");

                    b.Property<string>("Icone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdenacaoMenu")
                        .HasColumnType("int");

                    b.Property<string>("Rota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubMenuReferenciaPrincipal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnyPointStoreMenu");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenuIntegracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("DataCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEdicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntegracaoId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntegracaoId");

                    b.HasIndex("MenuId");

                    b.ToTable("AnyPointStoreMenuIntegracao");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenuRegra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("DataCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEdicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("RegraId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("AnyPointStoreMenuRegra");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenuUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("DataCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEdicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("AnyPointStoreMenuUsuario");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Permicoes.AnyPointPermissaoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPermissao")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnyPointPermissaoUsuario");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Permicoes.AnyPointStorePermicoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnyPointStorePermicoes");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.TipoTemplate.AnyPointStoreTipoTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IntegracaoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeAbreviado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IntegracaoId");

                    b.ToTable("AnyPointStoreTiposTemplate", (string)null);
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.User.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("FirstLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("PodeEscrever")
                        .HasColumnType("bit");

                    b.Property<bool>("PodeLer")
                        .HasColumnType("bit");

                    b.Property<bool>("PodeRemover")
                        .HasColumnType("bit");

                    b.Property<bool>("PodeVerConfiguracoes")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Usuario.AnyPointStoreUsuarioIntegracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("DataCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEdicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntegracaoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IntegracaoId");

                    b.ToTable("AnyPointStoreUsuarioIntegracao");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Usuario.AnyPointStoreUsuarioPermissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("DataCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEdicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissaoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnyPointStoreUsuarioPermissao");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Usuario.AnyPointStoreUsuarioRegra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("DataCriacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataEdicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegraId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnyPointStoreUsuarioRegra");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.AdobeHub.Planinhas.SqlServe.IntegracaoAdobeHubHistoricoImportacaoExecel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataUpload")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExcelJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Versao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoAdobeHubHistoricoImportacaoExecel");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.Bacen.IntegracaoBacenCotacaoMoeda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoMoeda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CotacaoCompra")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("CotacaoVenda")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("DataHoraCotacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraIntegracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoBoletim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoBacenCotacaoMoeda");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.Bacen.LogErros.MongoDb.IntegracaoBacenLogErros", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ClientIp")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("DataHoraUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endpoint")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExceptionType")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("HttpMethod")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("InnerException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Path")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueryString")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraceId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoBacenLogErros");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.SppBimmerInvoce.IntegracaoSppBimerDeParaMensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("MensagemModificada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MensagemPadrao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioCadastro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioEdicao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoSppBimerDeParaMensagem");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.Spp_Bimer_Invoce.IntegracaoSppBimerInvoceLogErros", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ClientIp")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("DataHoraUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endpoint")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ExceptionType")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("HttpMethod")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("InnerException")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Path")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueryString")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TraceId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoSppBimerInvoceLogErros");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.VexpessesBimer.IntegracaoBimmerVexpense.IntegracaoBimmerHistoricoErrosInsercoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataTentativa")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdResponse")
                        .HasColumnType("int");

                    b.Property<string>("MensagemErro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Tentativas")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoBimmerHistoricoErrosInsercoes");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.VexpessesBimer.IntegracaoBimmerVexpense.IntegracaoBimmerInsercaoPendentes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdResponse")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoBimmerInsercaoPendentes");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.VexpessesBimer.IntegracaoBimmerVexpense.IntegracaoBimmerInsertOK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdResponse")
                        .HasColumnType("int");

                    b.Property<string>("IdentificadorBimmer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Valor")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoBimmerInsertOK");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.VexpessesBimer.LogErros.IntegracaoVexpenssesBimmerLogErro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Erro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MigradoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoVexpenssesBimmerLogErro");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.Integracoes.VexpessesBimer.Vexpense.IntegracaoVexpenseTitulosRelatoriosStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Approval_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Approval_stage_id")
                        .HasColumnType("int");

                    b.Property<int?>("Approval_user_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Device_id")
                        .HasColumnType("int");

                    b.Property<string>("Excel_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpensesData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExpensesTotalValue")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("IdResponse")
                        .HasColumnType("int");

                    b.Property<string>("Justification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("On")
                        .HasColumnType("bit");

                    b.Property<int?>("Paying_company_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Payment_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Payment_method_id")
                        .HasColumnType("int");

                    b.Property<string>("Pdf_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IntegracaoVexpenseTitulosRelatoriosStatus");
                });

            modelBuilder.Entity("IntegracaoSppBimerInvoceItens", b =>
                {
                    b.HasOne("IntegracaoSppBimerInvoce", "IntegracaoSppBimerInvoce")
                        .WithMany("Itens")
                        .HasForeignKey("CdEmpresa", "NumeroDocumento", "NumeroDaNFSe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IntegracaoSppBimerInvoce");
                });

            modelBuilder.Entity("IntegracaoSppBimerInvoceResumo", b =>
                {
                    b.HasOne("IntegracaoSppBimerInvoce", "Invoce")
                        .WithMany("Resumos")
                        .HasForeignKey("CdEmpresa", "NumeroDocumento", "NumeroDaNFSe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoce");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.User.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenuIntegracao", b =>
                {
                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.GestaoIntegracao.AnyPointStoreGestaoIntegracao", "Integracao")
                        .WithMany()
                        .HasForeignKey("IntegracaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Integracao");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenuRegra", b =>
                {
                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenuUsuario", b =>
                {
                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Menu.AnyPointStoreMenu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.TipoTemplate.AnyPointStoreTipoTemplate", b =>
                {
                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.GestaoIntegracao.AnyPointStoreGestaoIntegracao", "Integracao")
                        .WithMany()
                        .HasForeignKey("IntegracaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AnyPointStoreTiposTemplate_Integracao");

                    b.Navigation("Integracao");
                });

            modelBuilder.Entity("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.Usuario.AnyPointStoreUsuarioIntegracao", b =>
                {
                    b.HasOne("PARS.Inhouse.Systems.Domain.Entities.AnyPoint.GestaoIntegracao.AnyPointStoreGestaoIntegracao", "Integracao")
                        .WithMany()
                        .HasForeignKey("IntegracaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Integracao");
                });

            modelBuilder.Entity("IntegracaoSppBimerInvoce", b =>
                {
                    b.Navigation("Itens");

                    b.Navigation("Resumos");
                });
#pragma warning restore 612, 618
        }
    }
}
